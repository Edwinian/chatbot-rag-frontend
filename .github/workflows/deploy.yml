name: Deploy React to EC2

on:
  push:
    branches: [main]  # Adjust to your default branch (e.g., main or master)

env:
  EC2_DEPLOY_DIR: /var/www/html  # Directory to serve React build files
  REACT_APP_DIR: /home/ubuntu/react-app  

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_KEY }}
          known_hosts: ${{ secrets.EC2_HOST }}

      - name: Initialize or Update Git Repository
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 1
          command: |
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=5 ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
              set -e
              set -x
              echo "Starting Git repository setup in ${{ env.REACT_APP_DIR }}"
              sudo -n bash -c "mkdir -p ${{ env.REACT_APP_DIR }} && cd ${{ env.REACT_APP_DIR }} && pwd"
              sudo -n git config --global credential.helper store
              set +x
              sudo -n bash -c "echo \"https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PAT }}@github.com\" > /root/.git-credentials"
              set -x
              sudo -n chmod 600 /root/.git-credentials
              if [ $? -ne 0 ]; then
                echo "Failed to set permissions on /root/.git-credentials"
                exit 1
              fi
              if sudo -n bash -c "[ -d ${{ env.REACT_APP_DIR }}/.git ]"; then
                echo "Resetting to latest origin/main"
                sudo -n bash -c "cd ${{ env.REACT_APP_DIR }} && git fetch origin && git checkout main && git reset --hard origin/main"
              else
                echo "Initializing new Git repository"
                sudo -n bash -c "cd ${{ env.REACT_APP_DIR }} && git init && git remote add origin \"https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PAT }}@github.com/${{ secrets.REPO_URL }}\" && git fetch origin && git checkout main"
              fi
              if [ $? -ne 0 ]; then
                echo "Git operations failed"
                exit 1
              fi
              sudo -n rm -f /root/.git-credentials
              echo "Git repository setup completed"
            '
        if: success()

      - name: Create and Secure .env File
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 1
          command: |
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=5 ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
              set -e
              set -x
              echo "Creating .env file in ${{ env.REACT_APP_DIR }}"
              sudo -n bash -c "cd ${{ env.REACT_APP_DIR }} && pwd"
              set +x
              sudo -n bash -c "echo \"REACT_APP_API_BASE_URL=${{ secrets.REACT_APP_API_BASE_URL }}\" > ${{ env.REACT_APP_DIR }}/.env"
              set -x
              sudo -n chmod 600 ${{ env.REACT_APP_DIR }}/.env
              if [ $? -ne 0 ]; then
                echo "Failed to set .env permissions"
                exit 1
              fi
              echo ".env file creation and permissions set"
            '
        if: success()

      - name: Free Disk Space
        run: |
          ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=5 ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            set -e
            set -x
            sudo -n apt-get clean
            sudo -n rm -rf /var/lib/apt/lists/*
            sudo -n journalctl --vacuum-size=50M
          '
        if: success()

      - name: Build and Deploy React App
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 30
          max_attempts: 1
          command: |
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=5 ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
              set -e
              set -x
              echo "Starting React build and deployment in ${{ env.REACT_APP_DIR }}"
              sudo -n bash -c "cd ${{ env.REACT_APP_DIR }} && pwd"
              echo "Checking disk space before build"
              if ! sudo -n df -h / | grep -q '[0-9]G'; then
                echo "Insufficient disk space"
                exit 1
              fi
              echo "Installing Node.js"
              sudo -n bash -c "curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && apt install -y nodejs"
              echo "Installing dependencies"
              sudo -n bash -c "cd ${{ env.REACT_APP_DIR }} && npm install"
              if [ $? -ne 0 ]; then
                echo "npm install failed"
                exit 1
              fi
              echo "Building React app"
              sudo -n bash -c "cd ${{ env.REACT_APP_DIR }} && npm run build"
              if [ $? -ne 0 ]; then
                echo "React build failed"
                exit 1
              fi
              echo "Copying build files to ${{ env.EC2_DEPLOY_DIR }}"
              sudo -n bash -c "mkdir -p ${{ env.EC2_DEPLOY_DIR }} && cp -r ${{ env.REACT_APP_DIR }}/build/* ${{ env.EC2_DEPLOY_DIR }}/"
              if [ $? -ne 0 ]; then
                echo "Failed to copy build files"
                exit 1
              fi
              echo "Configuring Nginx"
              sudo -n bash -c "cat > /etc/nginx/sites-available/default <<EOF
              server {
                  listen 80;
                  server_name ${{ secrets.EC2_HOST }};
                  root ${{ env.EC2_DEPLOY_DIR }};
                  index index.html;
                  location / {
                      try_files \$uri /index.html;
                  }
                  location /api {
                      proxy_pass http://localhost:8000;
                      proxy_set_header Host \$host;
                      proxy_set_header X-Real-IP \$remote_addr;
                      proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  }
              }
              EOF"
              echo "Testing Nginx configuration"
              sudo -n nginx -t
              if [ $? -ne 0 ]; then
                echo "Nginx configuration test failed"
                exit 1
              fi
              echo "Restarting Nginx"
              sudo -n systemctl restart nginx
              if [ $? -ne 0 ]; then
                echo "Nginx restart failed"
                exit 1
              fi
              echo "Testing endpoint"
              sudo -n curl -f -v http://${{ secrets.EC2_HOST }} || {
                echo "Endpoint test failed"
                exit 1
              }
              echo "Cleaning up temporary files"
              sudo -n bash -c "rm -rf ${{ env.REACT_APP_DIR }}"
              echo "React deployment completed successfully"
            '
        if: success()